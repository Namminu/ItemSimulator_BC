// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Items {
  itemId          Int       @map("itemId")  @id  @default(autoincrement())

  name            String    @map("name")
  health          Int       @map("health")
  power           Int       @map("power")
  price           Int       @map("price")

  @@map("Items")

  char_Inven Char_Invens[]
  char_Item  Char_Items[]
}

model Accounts {
  accountId       Int       @map("accountId")   @id @default(autoincrement())

  email           String    @map("email")       @unique 
  password        String    @map("password")
  accountName     String    @map("accountName") @unique
  createdAt       DateTime  @default(now())     @map("createdAt")
  updatedAt       DateTime  @updatedAt          @map("updatedAt")

  @@map("Accounts")

  characters Characters[]
}

model Characters {
  characterId     Int       @map("characterId") @id @default(autoincrement())
  accountId       Int       @map("accountId")

  name            String    @map("name")    @unique
  health          Int       @map("health")  @default(500)
  power           Int       @map("power")   @default(100)
  money           Int       @map("money")   @default(10000)

  @@map("Characters")

  account       Accounts    @relation(fields:[accountId], references: [accountId], onDelete:Cascade)
  char_Inven    Char_Invens[]
  char_Item     Char_Items[]
}

model Char_Invens {
  invenItemId Int @map("invenItemId") @id @default(autoincrement())
  characterId Int @map("characterId")
  itemId      Int @map("itemId")      @unique
  itemCount   Int @map("itemCount")
  itemName    String @map("itemName")

  @@map("Char_Invens")

  character Characters      @relation(fields: [characterId], references: [characterId])
  item      Items           @relation(fields: [itemId],      references: [itemId],      onDelete:Cascade)
}

model Char_Items {
  setItemId Int @map("setItemId") @id @default(autoincrement())
  characterId Int @map("characterId")
  itemId      Int @map("itemId")  @unique
  itemName    String @map("itemName")

  @@map("Char_Items")

  character Characters      @relation(fields: [characterId], references: [characterId])
  item      Items           @relation(fields: [itemId],      references: [itemId],      onDelete:Cascade)
}